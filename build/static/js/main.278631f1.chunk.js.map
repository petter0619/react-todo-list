{"version":3,"sources":["components/Header.js","components/Form.js","components/Todo.js","components/List.js","components/Footer.js","App.js","index.js"],"names":["Header","className","this","props","title","React","Component","Form","todoRef","createRef","handleSubmit","e","preventDefault","newTodo","text","current","value","isDone","addTodo","target","reset","onSubmit","type","name","placeholder","required","ref","Todo","buttonRef","checkboxRef","handleClick","todoIndex","dataset","todoid","deleteTodo","handleChange","toggleTodoIsDone","todo","id","data-todoid","checked","onChange","htmlFor","onClick","List","todoArray","todos","pendingTodos","filter","length","completeTodos","map","index","Footer","quote","by","App","state","push","setState","splice","headerTitle","footerQuote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.278631f1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1 className=\"page-title\">{this.props.title}</h1>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  todoRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const newTodo = {\n      text: this.todoRef.current.value,\n      isDone: false,\n    };\n    this.props.addTodo(newTodo);\n    e.target.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          name=\"todo\"\n          placeholder=\"Type your todo here\"\n          required\n          ref={this.todoRef}\n        />\n        <button className=\"form__submit\" type=\"submit\">Add Todo</button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Todo extends React.Component {\n  buttonRef = React.createRef();\n\n  checkboxRef = React.createRef();\n\n  handleClick = () => {\n    const todoIndex = this.buttonRef.current.dataset.todoid;\n    this.props.deleteTodo(todoIndex);\n  };\n\n  handleChange = () => {\n    const todoIndex = this.checkboxRef.current.dataset.todoid;\n    this.props.toggleTodoIsDone(todoIndex);\n  };\n\n  render() {\n    const { isDone, id, text } = this.props.todo;\n    return (\n      <li className={isDone ? 'list-item list-item--done' : 'list-item list-item--pending'}>\n        <input\n          className='list-item__checkbox'\n          type=\"checkbox\" id={`item${id}`}\n          data-todoid={id}\n          checked={isDone}\n          onChange={this.handleChange}\n          ref={this.checkboxRef}\n        />\n        <label\n          className={isDone ? 'list-item__label list-item__label--done' : 'list-item__label'}\n          htmlFor={`item${id}`}\n        >{text}</label>\n        {isDone && <button\n          className=\"list-item__delete-btn\"\n          data-todoid={id}\n          onClick={this.handleClick}\n          ref={this.buttonRef}\n        >X</button>}\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    isDone: PropTypes.bool.isRequired,\n  }),\n  toggleTodoIsDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass List extends React.Component {\n  render() {\n    const todoArray = this.props.todos;\n    const pendingTodos = todoArray.filter(todo => !todo.isDone).length;\n    const completeTodos = todoArray.filter(todo => todo.isDone).length;\n\n    return (\n      <ul className=\"list\">\n        {todoArray.length > 0 && <h3 className=\"list__title list__title--pending\">Pending: {pendingTodos}</h3>}\n        {todoArray.length > 0 && <h3 className=\"list__title list__title--done\">Done: {completeTodos}</h3>}\n        {todoArray.map((todo, index) => <Todo\n            key={index}\n            todo={{ ...todo, id: index }}\n            toggleTodoIsDone={this.props.toggleTodoIsDone}\n            deleteTodo={this.props.deleteTodo}\n        />)}\n      </ul>\n    );\n  }\n}\n\nList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  toggleTodoIsDone: PropTypes.func,\n  deleteTodo: PropTypes.func,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"quote\">\n        <hr className=\"underline\" />\n        <p>{this.props.quote.text}</p>\n        <p>â€” {this.props.quote.by}</p>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  quote: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    by: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport { footerQuote, headerTitle } from './assets/siteText.json';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n  }\n\n  addTodo = newTodo => {\n    const todos = [...this.state.todos];\n    todos.push(newTodo);\n    this.setState({ ...this.state, todos });\n  };\n\n  toggleTodoIsDone = index => {\n    const todos = [...this.state.todos];\n    todos[index].isDone = !todos[index].isDone;\n    this.setState({ ...this.state, todos });\n  };\n\n  deleteTodo = index => {\n    const todos = [...this.state.todos];\n    todos.splice(index, 1);\n    this.setState({ ...this.state, todos });\n  };\n\n  render() {\n    return (\n      <main>\n        <Header title={headerTitle}/>\n        <section className=\"container\">\n          <Form addTodo={this.addTodo}/>\n          <List\n            todos={this.state.todos}\n            toggleTodoIsDone={this.toggleTodoIsDone}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n        <Footer quote={footerQuote}/>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}